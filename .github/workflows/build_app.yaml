name: Build and Deploy Flutter Web to Firebase

on:
  push:
    branches:
      - master
      - dev

permissions: write-all

jobs:
  analyze:
    name: "Analyze"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Create .env file
        run: |
          cat << 'EOF' > .env
          APIKEY=${{ secrets.FIREBASE_API_KEY }}
          APPID=${{ secrets.FIREBASE_APP_ID }}
          MESSAGINGSENDERID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          PROJECTID=${{ secrets.FIREBASE_PROJECT_ID }}
          AUTHDOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}
          DATABASEURL=${{ secrets.FIREBASE_DATABASE_URL }}
          STORAGEBUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}
          MEASUREMENTID=${{ secrets.FIREBASE_MEASUREMENT_ID }}
          EOF

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

  build:
    name: "Build"
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Create .env file
        run: |
          cat << 'EOF' > .env
          APIKEY=${{ secrets.FIREBASE_API_KEY }}
          APPID=${{ secrets.FIREBASE_APP_ID }}
          MESSAGINGSENDERID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          PROJECTID=${{ secrets.FIREBASE_PROJECT_ID }}
          AUTHDOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}
          DATABASEURL=${{ secrets.FIREBASE_DATABASE_URL }}
          STORAGEBUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}
          MEASUREMENTID=${{ secrets.FIREBASE_MEASUREMENT_ID }}
          EOF

      - name: Install dependencies
        run: flutter pub get

      - name: Build Web
        run: |
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            flutter build web --release --no-tree-shake-icons --dart-define=ENVIRONMENT=production
          else
            flutter build web --release --no-tree-shake-icons
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web

  deploy:
    name: "Deploy"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: build/web

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_RECEITINHAS_28D4A }}'
          channelId: live
          projectId: receitinhas-28d4a

  tag_release:
    name: "Create Release Tag"
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag and increment
        id: increment_tag
        run: |
          if git tag -l | grep -q .; then
            TAG=$(git tag -l --sort=-version:refname | head -n1)
            if [ -z "$TAG" ]; then
              TAG="1.0.0"
            fi
          else
            TAG="1.0.0"
          fi
          
          IFS='.' read -r -a VERSION_PARTS <<< "$TAG"
          if [ ${#VERSION_PARTS[@]} -ne 3 ]; then
            VERSION_PARTS=(1 0 0)
          fi
          
          PATCH=${VERSION_PARTS[2]}
          PATCH=$((PATCH + 1))
          NEW_TAG="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH"
          
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag ${{ steps.increment_tag.outputs.NEW_TAG }}
          git push origin ${{ steps.increment_tag.outputs.NEW_TAG }}